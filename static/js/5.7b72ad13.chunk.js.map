{"version":3,"sources":["hooks/useMounted.ts","components/authentication/password-recovery/PasswordRecoveryAmplify.tsx","pages/authentication/PasswordRecovery.tsx"],"names":["useMounted","isMounted","useRef","useEffect","current","PasswordRecoveryAmplify","mounted","passwordRecovery","useAuth","navigate","useNavigate","initialValues","email","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","state","username","console","error","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","autoFocus","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","variant","Box","sx","mt","FormHelperText","Button","color","disabled","size","PasswordRecovery","platform","backgroundColor","display","flexDirection","minHeight","Container","maxWidth","py","justifyContent","mb","Card","background","boxShadow","CardContent","p","alignItems","Typography","gutterBottom","height","maxHeight","width","flexGrow"],"mappings":"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","file":"static/js/5.7b72ad13.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport type { MutableRefObject } from 'react';\r\n\r\nconst useMounted = (): MutableRefObject<boolean> => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => (): void => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useMounted;\r\n","import type { FC } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Box, Button, FormHelperText, TextField } from '@material-ui/core';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useMounted from '../../../hooks/useMounted';\r\n\r\nconst PasswordRecoveryAmplify: FC = () => {\r\n  const mounted = useMounted();\r\n  const { passwordRecovery } = useAuth() as any;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        submit: null\r\n      }}\r\n      validationSchema={\r\n        Yup\r\n          .object()\r\n          .shape({\r\n            email: Yup\r\n              .string()\r\n              .email('Must be a valid email')\r\n              .max(255)\r\n              .required('Email is required')\r\n          })\r\n      }\r\n      onSubmit={async (values, {\r\n        setErrors,\r\n        setStatus,\r\n        setSubmitting\r\n      }): Promise<void> => {\r\n        try {\r\n          await passwordRecovery(values.email);\r\n\r\n          navigate('/authentication/password-reset', {\r\n            state: {\r\n              username: values.email\r\n            }\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n          if (mounted.current) {\r\n            setStatus({ success: false });\r\n            setErrors({ submit: err.message });\r\n            setSubmitting(false);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values\r\n      }): JSX.Element => (\r\n        <form\r\n          noValidate\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <TextField\r\n            autoFocus\r\n            error={Boolean(touched.email && errors.email)}\r\n            fullWidth\r\n            helperText={touched.email && errors.email}\r\n            label=\"Email Address\"\r\n            margin=\"normal\"\r\n            name=\"email\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            value={values.email}\r\n            variant=\"outlined\"\r\n          />\r\n          {errors.submit && (\r\n            <Box sx={{ mt: 3 }}>\r\n              <FormHelperText error>\r\n                {errors.submit}\r\n              </FormHelperText>\r\n            </Box>\r\n          )}\r\n          <Box sx={{ mt: 3 }}>\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Recover Password\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default PasswordRecoveryAmplify;\r\n","import type { FC } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { PasswordRecoveryAmplify } from '../../components/authentication/password-recovery';\r\nimport useAuth from '../../hooks/useAuth';\r\n\r\nconst PasswordRecovery: FC = () => {\r\n  const { platform } = useAuth() as any;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Password Recovery | Material Kit Pro</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          minHeight: '100vh'\r\n        }}\r\n      >\r\n        <Container\r\n          maxWidth=\"sm\"\r\n          sx={{ py: 10 }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center'\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              mb: 8\r\n            }}\r\n          />\r\n          <Card sx={{ background: 'none !important', boxShadow: 'none !important' }}>\r\n            <CardContent\r\n              sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                p: 4\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  mb: 3\r\n                }}\r\n              >\r\n                <div>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                  >\r\n                    Password Recovery\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    Tell us your email so we can send you a reset link\r\n                  </Typography>\r\n                </div>\r\n                <Box\r\n                  sx={{\r\n                    height: 32,\r\n                    '& > img': {\r\n                      maxHeight: '100%',\r\n                      width: 'auto'\r\n                    }\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  mt: 3\r\n                }}\r\n              >\r\n                {platform === 'Amplify' && <PasswordRecoveryAmplify />}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordRecovery;\r\n"],"sourceRoot":""}