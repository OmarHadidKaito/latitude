{"version":3,"sources":["components/authentication/register/RegisterAmplify.tsx","pages/authentication/Register.tsx"],"names":["RegisterAmplify","props","mounted","useMounted","navigate","useNavigate","register","useAuth","initialValues","email","password","phoneNumber","policy","submit","validationSchema","Yup","shape","max","required","min","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","state","username","console","error","current","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","variant","Box","sx","alignItems","display","ml","mt","Checkbox","checked","color","Typography","Link","component","href","FormHelperText","Button","disabled","size","Register","backgroundColor","minHeight","Container","maxWidth","py","Card","background","boxShadow","CardContent","flexDirection","p","justifyContent","mb","gutterBottom","height","maxHeight","width","flexGrow","Divider","my","RouterLink","to","underline","LoginIllustration"],"mappings":"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","file":"static/js/9.856c2008.chunk.js","sourcesContent":["import type { FC } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useMounted from '../../../hooks/useMounted';\r\n\r\nconst RegisterAmplify: FC = (props) => {\r\n  const mounted = useMounted();\r\n  const navigate = useNavigate();\r\n  const { register } = useAuth() as any;\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n          phoneNumber: '',\r\n          policy: true,\r\n          submit: null\r\n        }}\r\n        validationSchema={\r\n          Yup\r\n            .object()\r\n            .shape({\r\n              email: Yup\r\n                .string()\r\n                .email('Must be a valid email')\r\n                .max(255)\r\n                .required('Email is required'),\r\n              phoneNumber: Yup\r\n                .string()\r\n                .max(255)\r\n                .required('Phone Number is required'),\r\n              password: Yup\r\n                .string()\r\n                .min(7)\r\n                .max(255)\r\n                .required('Password is required'),\r\n              policy: Yup\r\n                .boolean()\r\n                .oneOf([true], 'This field must be checked')\r\n            })\r\n        }\r\n        onSubmit={async (values, {\r\n          setErrors,\r\n          setStatus,\r\n          setSubmitting\r\n        }): Promise<void> => {\r\n          try {\r\n            await register(values.email, values.password);\r\n\r\n            navigate('/authentication/verify-code', {\r\n              state: {\r\n                username: values.email\r\n              }\r\n            });\r\n          } catch (err) {\r\n            console.error(err);\r\n            if (mounted.current) {\r\n              setStatus({ success: false });\r\n              setErrors({ submit: err.message });\r\n              setSubmitting(false);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          touched,\r\n          values\r\n        }): JSX.Element => (\r\n          <form\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            {...props}\r\n          >\r\n            <TextField\r\n              error={Boolean(touched.email && errors.email)}\r\n              fullWidth\r\n              helperText={touched.email && errors.email}\r\n              label=\"Email Address\"\r\n              margin=\"normal\"\r\n              name=\"email\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              type=\"email\"\r\n              value={values.email}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              error={Boolean(touched.phoneNumber && errors.phoneNumber)}\r\n              fullWidth\r\n              helperText={touched.phoneNumber && errors.phoneNumber}\r\n              label=\"Phone Number\"\r\n              margin=\"normal\"\r\n              name=\"PhoneNumber\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              type=\"string\"\r\n              value={values.phoneNumber}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              error={Boolean(touched.password && errors.password)}\r\n              fullWidth\r\n              helperText={touched.password && errors.password}\r\n              label=\"Password\"\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              value={values.password}\r\n              variant=\"outlined\"\r\n            />\r\n            <Box\r\n              sx={{\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                ml: -1,\r\n                mt: 2\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={values.policy}\r\n                color=\"primary\"\r\n                name=\"policy\"\r\n                onChange={handleChange}\r\n              />\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"body2\"\r\n              >\r\n                I have read the\r\n                {' '}\r\n                <Link\r\n                  color=\"primary\"\r\n                  component=\"a\"\r\n                  href=\"#\"\r\n                >\r\n                  Terms and Conditions\r\n                </Link>\r\n              </Typography>\r\n            </Box>\r\n            {Boolean(touched.policy && errors.policy) && (\r\n              <FormHelperText error>\r\n                {errors.policy}\r\n              </FormHelperText>\r\n            )}\r\n            {errors.submit && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <FormHelperText error>\r\n                  {errors.submit}\r\n                </FormHelperText>\r\n              </Box>\r\n            )}\r\n            <Box sx={{ mt: 2 }}>\r\n              <Button\r\n                color=\"primary\"\r\n                disabled={isSubmitting}\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterAmplify;\r\n","import type { FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Divider,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  RegisterAmplify,\r\n} from '../../components/authentication/register';\r\nimport LoginIllustration from 'src/icons/LoginIllustration';\r\n\r\nconst Register: FC = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Register | Material Kit Pro</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        minHeight: '100vh'\r\n      }}\r\n    >\r\n      <Box>\r\n        <Container\r\n          maxWidth=\"sm\"\r\n          sx={{ py: '10px' }}\r\n        >\r\n          <Card sx={{ background: 'none !important', boxShadow: 'none !important' }}>\r\n            <CardContent\r\n              sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                p: 4\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  alignItems: 'center',\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  mb: 3\r\n                }}\r\n              >\r\n                <div>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                  >\r\n                    Register\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    Register on the internal platform\r\n                  </Typography>\r\n                </div>\r\n                <Box\r\n                  sx={{\r\n                    height: 32,\r\n                    '& > img': {\r\n                      maxHeight: '100%',\r\n                      width: 'auto'\r\n                    }\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  mt: 3\r\n                }}\r\n              >\r\n                <RegisterAmplify />\r\n              </Box>\r\n              <Divider sx={{ my: 3 }} />\r\n              <Link\r\n                color=\"textSecondary\"\r\n                component={RouterLink}\r\n                to=\"/authentication/login\"\r\n                variant=\"body2\"\r\n                underline=\"none\"\r\n              >\r\n                Having an account\r\n              </Link>\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </Box>\r\n      <Box>\r\n        <LoginIllustration />\r\n      </Box>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}