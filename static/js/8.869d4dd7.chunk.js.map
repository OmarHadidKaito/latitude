{"version":3,"sources":["components/authentication/login/LoginAmplify.tsx","pages/authentication/Login.tsx"],"names":["LoginAmplify","props","mounted","useMounted","navigate","useNavigate","login","useAuth","initialValues","email","phoneNumber","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","current","success","console","error","code","state","username","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","autoFocus","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","variant","Box","sx","mt","FormHelperText","Button","color","disabled","size","Login","platform","backgroundColor","display","justifyContent","flexWrap","minHeight","Container","maxWidth","py","Card","background","boxShadow","CardContent","flexDirection","p","alignItems","mb","Typography","gutterBottom","height","maxHeight","width","flexGrow","pt","Link","component","RouterLink","to","underline","Checkbox","LoginIllustration"],"mappings":"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","file":"static/js/8.869d4dd7.chunk.js","sourcesContent":["import type { FC } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormHelperText,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useMounted from '../../../hooks/useMounted';\r\n\r\nconst LoginAmplify: FC = (props) => {\r\n  const mounted = useMounted();\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth() as any;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: 'test@test.io',\r\n        phoneNumber: '+106777533',\r\n        password: 'Password123!',\r\n        submit: null\r\n      }}\r\n      validationSchema={\r\n        Yup\r\n          .object()\r\n          .shape({\r\n            email: Yup\r\n              .string()\r\n              .email('Must be a valid email')\r\n              .max(255)\r\n              .required('Email is required'),\r\n            phoneNumber: Yup\r\n              .string()\r\n              .max(255)\r\n              .required('Phone number is required'),\r\n            password: Yup\r\n              .string()\r\n              .max(255)\r\n              .required('Email is required')\r\n          })\r\n      }\r\n      onSubmit={async (values, {\r\n        setErrors,\r\n        setStatus,\r\n        setSubmitting\r\n      }): Promise<void> => {\r\n        try {\r\n          await login(values.email, values.password);\r\n\r\n          if (mounted.current) {\r\n            setStatus({ success: true });\r\n            setSubmitting(false);\r\n          }\r\n        } catch (err) {\r\n          console.error(err);\r\n\r\n          if (err.code === 'UserNotConfirmedException') {\r\n            navigate('/authentication/verify-code', {\r\n              state: {\r\n                username: values.email\r\n              }\r\n            });\r\n            return;\r\n          }\r\n\r\n          if (mounted.current) {\r\n            setStatus({ success: false });\r\n            setErrors({ submit: err.message });\r\n            setSubmitting(false);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values\r\n      }): JSX.Element => (\r\n        <form\r\n          noValidate\r\n          onSubmit={handleSubmit}\r\n          {...props}\r\n        >\r\n          <TextField\r\n            autoFocus\r\n            error={Boolean(touched.email && errors.email)}\r\n            fullWidth\r\n            helperText={touched.email && errors.email}\r\n            label=\"Email Address\"\r\n            margin=\"normal\"\r\n            name=\"email\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            value={values.email}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            error={Boolean(touched.phoneNumber && errors.phoneNumber)}\r\n            fullWidth\r\n            helperText={touched.phoneNumber && errors.phoneNumber}\r\n            label=\"Phone number\"\r\n            margin=\"normal\"\r\n            name=\"phoneNumber\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"phoneNumber\"\r\n            value={values.phoneNumber}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error={Boolean(touched.password && errors.password)}\r\n            fullWidth\r\n            helperText={touched.password && errors.password}\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          {errors.submit && (\r\n            <Box sx={{ mt: 3 }}>\r\n              <FormHelperText error>\r\n                {errors.submit}\r\n              </FormHelperText>\r\n            </Box>\r\n          )}\r\n          <Box sx={{ mt: 2 }}>\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Log In\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginAmplify;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport type { FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\n// import AuthBanner from '../../components/authentication/AuthBanner';\r\nimport { LoginAmplify } from '../../components/authentication/login';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport LoginIllustration from 'src/icons/LoginIllustration';\r\n\r\nconst Login: FC = () => {\r\n  const { platform } = useAuth() as any;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          flexWrap: 'wrap',\r\n          minHeight: '100vh'\r\n        }}\r\n      >\r\n        <Box>\r\n          <Container\r\n            maxWidth=\"sm\"\r\n            sx={{ py: '80px' }}\r\n          >\r\n            <Card sx={{ background: 'none !important', boxShadow: 'none !important' }}>\r\n              <CardContent\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  p: 4,\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    mb: 3\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <Typography\r\n                      color=\"textPrimary\"\r\n                      gutterBottom\r\n                      variant=\"h4\"\r\n                    >\r\n                      Sign Ins\r\n                    </Typography>\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      variant=\"body2\"\r\n                    >\r\n                      Log in on the internal platform\r\n                    </Typography>\r\n                  </div>\r\n                  <Box\r\n                    sx={{\r\n                      height: 32,\r\n                      '& > img': {\r\n                        maxHeight: '100%',\r\n                        width: 'auto'\r\n                      }\r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    flexGrow: 1,\r\n                    mt: 3\r\n                  }}\r\n                >\r\n                  <LoginAmplify />\r\n                </Box>\r\n                {platform === 'Amplify' && (\r\n                <Box sx={{\r\n                  pt: 1,\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center'\r\n                }}\r\n                >\r\n                  <Box>\r\n                    <Link\r\n                      color=\"textSecondary\"\r\n                      component={RouterLink}\r\n                      to=\"/authentication/password-recovery\"\r\n                      variant=\"body2\"\r\n                      underline=\"none\"\r\n                    >\r\n                      Forgot password\r\n                    </Link>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      alignItems: 'center'\r\n                    }}\r\n                  >\r\n                    <Checkbox />\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      variant=\"body2\"\r\n                    >\r\n                      Remember me\r\n                    </Typography>\r\n\r\n                  </Box>\r\n                </Box>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Container>\r\n        </Box>\r\n        <Box>\r\n          <LoginIllustration />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}